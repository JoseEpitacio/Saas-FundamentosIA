import streamlit as st
import google.generativeai as genai

api_key = st.secrets("API_KEY")
genai.configure(api_key=api_key)

model = genai.GenerativeModel("gemini-2.0-flash")

def calcular_tmb(sexo: str, idade: int, peso: float, altura: float) -> float:
    sexo = sexo.lower()
    if sexo == 'masculino':
        tmb = 88.36 + (13.4 * peso) + (4.8 * altura) - (5.7 * idade)
    elif sexo == 'feminino':
        tmb = 447.6 + (9.2 * peso) + (3.1 * altura) - (4.3 * idade)
    else:
        raise ValueError("Sexo inv√°lido. Use 'masculino' ou 'feminino'.")
    return tmb

def gerar_resposta_gemini(prompt):
    response = model.generate_content(prompt)
    return response.text

# Configura√ß√£o da p√°gina
st.set_page_config(page_title="Fitness.AI", page_icon="üöÄ")

# T√≠tulo da aplica√ß√£o
st.title("Seja bem-vindo ao Fitness.AI! üöÄ")

st.write("Seu personal trainer e nutricionista virtual, sempre pronto para ajudar voc√™ a alcan√ßar seus objetivos de fitness!")

nome = st.text_input("Digite seu nome:")
idade = st.number_input("Idade:", min_value=0, max_value=120)
sexo = st.selectbox("Sexo:", ["feminino", "masculino"])
biotipo = st.selectbox("Biotipo:", ["ectomorfo", "mesomorfo", "endomorfo"])
st.write("Lembre-se: Ectomorfo = tend√™ncia a emagrecer, Mesomorfo = tend√™ncia atl√©tica, Endomorfo = tend√™ncia a engordar.")
altura = st.number_input("Altura (cm):", 100, 250, 170)
peso = st.number_input("Peso (kg):", value=70)


tmb = calcular_tmb(sexo, idade, peso, altura)
txmb = st.number_input("Taxa metab√≥lica basal (TMB):", min_value=500, max_value=10000, value=int(tmb))
st.write("TMB √© a energia m√≠nima para manter fun√ß√µes vitais em repouso. n√£o alterar caso n√£o saiba o valor exato.")

# N√≠vel de atividade f√≠sica
atividade_dict = {
    1: ("Sedent√°rio", 1.2),
    2: ("Levemente ativo", 1.375),
    3: ("Moderadamente ativo", 1.55),
    4: ("Muito ativo", 1.725),
    5: ("Extremamente ativo", 1.9)
}
st.write("N√≠vel de atividade f√≠sica:")
atividade = st.slider("N√≠vel de atividade:", 1, 5, 1)
fator_atividade = atividade_dict[atividade][1]
st.write(f"Selecionado: {atividade_dict[atividade][0]}")
st.write("1 - Sedent√°rio: praticamente n√£o faz nada | 2 - Levemente ativo: exerc√≠cios leves 1-3x/semana | 3 - Moderadamente ativo: exerc√≠cios moderados 3-5x/semana | 4 - Muito ativo: exerc√≠cios pesados 6-7x/semana | 5 - Extremamente ativo: exerc√≠cios muito pesados, duas vezes ao dia.")

tdee = int(txmb * fator_atividade)
st.write(f"Seu TDEE estimado √©: {tdee} calorias por dia.")

# Quantas vezes por semana deseja ir para a academia
frequencia_academia = st.slider("Quantas vezes por semana voc√™ quer ir para a academia?", 1, 7, 3)

# Alimentos que n√£o gosta/n√£o pode comer
alimentos_nao_gosta = st.text_area("Alimentos que voc√™ N√ÉO gosta ou N√ÉO pode comer (separe por v√≠rgula):")

# Alimentos que gosta e fazem parte do seu cotidiano
alimentos_gosta = st.text_area("Alimentos que voc√™ GOSTA e fazem parte do seu cotidiano (separe por v√≠rgula):")

objetivo = st.selectbox("Qual seu objetivo?", ["emagrecer", "emagrecer r√°pido", "manter", "ganhar massa muscular", "ganhar massa muscular r√°pido"])
atual = st.selectbox("Qual seu estado atual?", ["magreza", "massa muscular consider√°vel", "falso magro", "acima do peso", "obesidade leve", "obesidade moderada", "obesidade severa"])

if st.button("Gerar treino e dieta personalizada"):
    with st.spinner("Gerando plano personalizado..."):
        prompt = f"""
        Meu nome √© {nome}, tenho {idade} anos, sou do sexo {sexo}, biotipo {biotipo}, altura {altura} cm, peso {peso} kg. Minha TMB √© {txmb} e meu TDEE √© {tdee}. Meu objetivo √© {objetivo} e meu estado atual √© {atual}.
        Quero ir para a academia {frequencia_academia} vezes por semana.
        N√£o gosto/n√£o posso comer: {alimentos_nao_gosta}.
        Gosto e costumo comer: {alimentos_gosta}.
        Gere um plano de treino semanal e uma sugest√£o de dieta di√°ria personalizada para mim, considerando todas essas informa√ß√µes, restri√ß√µes e prefer√™ncias alimentares. Seja detalhado, pr√°tico e objetivo.
        """
        resposta = gerar_resposta_gemini(prompt)
        st.subheader("Plano de Treino e Dieta Personalizada:")
        st.write(resposta)


